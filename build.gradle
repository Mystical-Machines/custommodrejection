buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sponge"
            url = "http://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}

apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"

version = modVersion + "-" + forgeBuild
group = modGroup
archivesBaseName = modBaseName

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

minecraft {
    version = project.forgeVersion + '.' + project.forgeBuild
    runDir = "run"
    mappings = project.mcpVersion
    makeObfSourceJar = false
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    compile('org.spongepowered:mixin:0.8.1-SNAPSHOT') {
        exclude module: 'launchwrapper'
    }
}

artifacts {
    archives sourceJar
}

sourceSets {
    main {
        refMap = "mixins.customreject.refmap.json"
    }
}

jar {
    manifest {
        attributes(
                'FMLCorePluginContainsFMLMod': 'true',
                'MixinConfigs': 'mixins.customreject.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                "ForceLoadAsMod": "true"
        )
    }
}

processResources {
    filteringCharset 'UTF-8'
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}